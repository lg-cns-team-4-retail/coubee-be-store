plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.coubee'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2025.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    // Spring Cloud
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // AWS SDK - auth는 s3에 포함됨
    implementation 'software.amazon.awssdk:s3:2.25.22'

    // Database
    implementation 'org.postgresql:postgresql:42.7.3'

    // Hibernate Spatial (PostGIS)
    implementation 'org.hibernate:hibernate-core:6.4.4.Final'
    implementation 'org.hibernate:hibernate-spatial:6.4.4.Final'
    implementation 'org.locationtech.jts:jts-core:1.19.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false // plain.jar 생성 완전히 비활성화
}

tasks.register('getAppName') {
    doLast {
        println "${rootProject.name}"
    }
}

tasks.register('getAppVersion') {
    doLast {
        println "${project.version}"
    }
}